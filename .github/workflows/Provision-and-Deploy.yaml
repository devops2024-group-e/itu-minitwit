---
name: provision-and-deployment
run-name: Provision infrastructure and deploy application

on:
  workflow_dispatch:
    manual: true

jobs:
  setup-infrastructure:
    name: Setup Infrastructure
    runs-on: ubuntu-latest
    outputs:
      ansible-inventory: ${{ steps.ansible-inventory.outputs.inventory }} # Based of the documentation from https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    steps:
      - name: Checkout IaC
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            Minitwit.Provision/

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version:7.0.x

      - name: Setup Infrastructure Changes
        id: pulumi
        uses: pulumi/actions@v5
        with:
          command: up
          stack-name: arnenator/minitwit-prod
          working-directory: Minitwit.Provision/
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_TOKEN }}
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Get pulumi output
        run: |
          echo ${{ steps.pulumi.outputs }}

      - name: Generate Ansible Inventory output
        id: ansible-inventory
        run: |
          # Get server categories
          echo "Getting categories from Pulumi output"
          declare -a categories=($(${{ steps.pulumi.outputs }} | jq -r 'keys | .[]'))

          echo "Adding all server category..."

          # Create the ansible inventory file content
          read -r -d '' ansibleinventory << EOM
          [all]
          $(${{ steps.pulumi.outputs }} | jq -r 'add | .[]')

          $(for cate in "${categories[@]}"; do
           echo "[${cate}]"
           echo "$(${{ steps.pulumi.outputs }} | jq -r --arg category "${cate}" '.[$category] | .[]')"
           echo ""
          done)
          EOM

          echo "inventory=${ansibleinventory}" >> $GITHUB_OUTPUT

  provision-web:
    name: Provision and deploy web servers
    needs: setup-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Fetch Ansible Playbook action
        uses: actions/checkout@v4
        with:
          repository: devops2024-group-e/ansible-action
          sparse-checkout: |
            .github/actions/ansible-run-playbook
          sparse-checkout-cone-mode: false
          path: action

      - name: Create ansible Inventory file
        run: |
          ${{ needs.setup-infrastructure.outputs.ansible-inventory }} > main/.infrastructure/inventory.ansible

      - name: Provision and deploy web servers
        uses: ./action/.github/actions/ansible-run-playbook
        with:
          dotoken: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          dosshkeyname: ${{ secrets.DIGITAL_OCEAN_ANSIBLE_SSH_KEY_NAME }}
          sshkey: ${{ secrets.ANSIBLE_SSH_KEY }}
          dockeruser: ${{ secrets.DOCKER_USER }}
          dockerpassword: ${{ secrets.DOCKER_PWD }}
          inventoryfile: inventory.ansible
          playbook: web-playbook.yaml
          working-directory: main/.infrastructure

  provision-monitor:
    name: Provision and deploy monitor server
    needs: setup-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main

      - name: Fetch Ansible Playbook action
        uses: actions/checkout@v4
        with:
          repository: devops2024-group-e/ansible-action
          sparse-checkout: |
            .github/actions/ansible-run-playbook
          sparse-checkout-cone-mode: false
          path: action

      - name: Create ansible Inventory file
        run: |
          ${{ needs.setup-infrastructure.outputs.ansible-inventory }} > main/.infrastructure/inventory.ansible

      - name: Provision and deploy monitoring servers
        uses: ./action/.github/actions/ansible-run-playbook
        with:
          dotoken: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          dosshkeyname: ${{ secrets.DIGITAL_OCEAN_ANSIBLE_SSH_KEY_NAME }}
          sshkey: ${{ secrets.ANSIBLE_SSH_KEY }}
          dockeruser: ${{ secrets.DOCKER_USER }}
          dockerpassword: ${{ secrets.DOCKER_PWD }}
          inventoryfile: inventory.ansible
          playbook: monitor-playbook.yaml
          working-directory: main/.infrastructure
