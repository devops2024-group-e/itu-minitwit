name: Testing

on:
  workflow_dispatch:
    manual: true
  pull_request:
    paths:
      - 'Minitwit/**'
      - 'Minitwit.Tests/**'
      - 'MinitwitSimulatorAPI/**'
      - 'Minitwit.Simulator.Api.Tests/**'
      - 'Minitwit.Infrastructure/**'
      - 'Minitwit.Infrastructure.Tests/**'

jobs:
  Minitwit-Infrastructure-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Install dotnet dependencies
        run: dotnet restore

      - name: Test dotnet version
        run: dotnet --version

      - name: Test
        run: dotnet test Minitwit.Infrastructure.Tests/Minitwit.Infrastructure.Tests.csproj

  Backend-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Install dotnet dependencies
        run: dotnet restore

      - name: Test dotnet version
        run: dotnet --version

      - name: Set up database
        run: docker compose -f docker-compose.yaml up minitwit-db -d

      - name: Test
        run: dotnet test Minitwit.Simulator.Api.Tests/Minitwit.Simulator.Api.Tests.csproj

  Frontend-Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Install dotnet dependencies
        run: dotnet restore

      - name: Test dotnet version
        run: dotnet --version

      - name: Set up database
        run: docker compose -f docker-compose.yaml up minitwit-db -d
      
      - name: Set up frontend
        run: dotnet run --project Minitwit/

      - name: Test
        run: dotnet test Minitwit.Tests/Minitwit.Tests.csproj
