---
name: ContinuousDeployment

on:
  #push:
    # Run workflow every time something is pushed to the main branch
    #branches:
     # - main
      #- master
  # allow manual triggers for now tooo
  workflow_dispatch:
    manual: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push database minitwit
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.database
          build-args: USER_PWD=${{ secrets.DB_USER_PWD }}
          push: true
          tags: ghcr.io/devops2024-group-e/database.minitwit:latest

      - name: Build and push frontend minitwit
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: DB_CONN=${{ secrets.DB_CONNECTION }}
          file: ./Dockerfile.frontend
          push: true
          tags: ghcr.io/devops2024-group-e/frontend.minitwit:latest

      - name: Build and push backend minitwit
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.backend
          build-args: DB_CONN=${{ secrets.DB_CONNECTION }}
          push: true
          tags: ghcr.io/devops2024-group-e/backend.minitwit:latest

     # - name: Test minitwit
       # run: |
        #  docker build -t $DOCKER_USERNAME/minitwittestimage -f Dockerfile-minitwit-tests .
         # yes 2>/dev/null | docker-compose up -d
         # docker run --rm --network=itu-minitwit-network $DOCKER_USERNAME/minitwittestimage
       # env:
         # DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/minitwit.key
          chmod 600 ~/.ssh/minitwit.key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: >
          ssh $SSH_USER@$SSH_HOST -i ~/.ssh/minitwit.key -o StrictHostKeyChecking=no
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
